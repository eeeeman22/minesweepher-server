(this.webpackJsonpminesweeper=this.webpackJsonpminesweeper||[]).push([[0],{11:function(e,t,a){e.exports=a(22)},21:function(e,t,a){},22:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(4),i=a.n(l),u=a(1),c=Object(u.b)((function(e){return{victoryStatus:e.victoryStatus,failureStatus:e.failureStatus,flagsApplied:e.flagsApplied,totalMines:e.totalMines,timer:e.timer}}),null)((function(e){var t=e.victoryStatus,a=e.failureStatus,n=e.flagsApplied,l=e.totalMines,i=e.timer;return!1===t&&!1===a?r.a.createElement("div",null,r.a.createElement("div",{className:"banner"},r.a.createElement("span",{style:{float:"left"}},"time elapsed:",i),r.a.createElement("span",{style:{float:"right"}},"Mines Remaining:",l-n))):!0===t?r.a.createElement("div",{style:{backgroundColor:"green"},className:"victory"},r.a.createElement("h1",{style:{color:"white"}},"VICTORY!")):!0===a?r.a.createElement("div",{style:{backgroundColor:"red"},className:"failure"},r.a.createElement("h1",{style:{color:"white"}},"FAILURE!")):void 0})),s="CLICKED",o="TOGGLE_FLAGGED",d="NEW_GAME",m="CHANGE_REQ_BOARD_SIZE",f="CHANGE_REQ_BOARD_DIFFICULTY",v="INCREMENT_TIMER",h="CHANGE_TIMER_LIMIT",g="AVALANCHE";var b=Object(u.b)((function(e){return{victoryStatus:e.victoryStatus,failureStatus:e.failureStatus,boardParams:e.requestedBoardSize,requestedBoardDifficulty:e.requestedBoardDifficulty,timerLimit:e.timerLimit}}),null)((function(e){var t=e.dispatch,a=e.boardParams,n=e.requestedBoardDifficulty,l=e.timerLimit;return r.a.createElement("div",null,r.a.createElement("table",{className:"menuContainer"},r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"Board Size"),r.a.createElement("td",null,r.a.createElement("input",{type:"range",min:"5",max:"20",value:a,onChange:function(e){var a;t((a=e.target.value,{type:m,size:a}))}})," "),r.a.createElement("td",null,a,"X",a)),r.a.createElement("tr",null,r.a.createElement("td",null,"Difficulty"),r.a.createElement("td",null,r.a.createElement("input",{type:"range",min:"3",max:"10",value:n,onChange:function(e){var a;console.log(e),t((a=e.target.value,{type:f,difficulty:a}))}})),r.a.createElement("td",null,3===Number(n)?"Impossible":n<5?"Hard":n<7?"Medium":n<9?"Easy":"Very Easy"," "+n,"tiles/mine")),r.a.createElement("tr",null,r.a.createElement("td",null,"Timer Limit"),r.a.createElement("td",null,r.a.createElement("input",{type:"number",min:"1",max:"999",default:"100",value:l,onChange:function(e){var a;console.log(l),t((a=e.target.value,{type:h,timerLimit:a}))}}))))),r.a.createElement("button",{onClick:function(){t(function(e){return{type:d,boardParams:e}}(a))}},"Reset Board"),r.a.createElement("button",{onClick:function(){t({type:g})}},"Avalanche!"))})),E=function(e){return e.hasBeenClicked?"M"===e.value?"mine":e.value>0?"number _"+e.value:"empty":e.flagged?"flagged":"waiting"},p=function(e,t){return"mine"===e?"MINE":"number"===e.split(" ")[0]?t.value:"empty"===e?"":"flagged"===e?"Flag":""},y=Object(u.b)((function(e){return{board:e.board,victoryStatus:e.victoryStatus,failureStatus:e.failureStatus}}),null)((function(e){var t=e.board,a=e.dispatch;return r.a.createElement("div",{className:"boardContainer"},r.a.createElement("table",{className:"board"},r.a.createElement("tbody",null,t.map((function(e,t){return r.a.createElement("tr",{key:t},e.map((function(e,n){var l=E(e),i=p(l,e);return r.a.createElement("td",{key:t+","+n,rownum:t,cellnum:n,onClick:function(e){e.altKey?a({type:o,location:[t,n]}):a(function(e){return{type:s,location:e}}([t,n]))},className:l+" square"},i)})))})))))}));a(21);var C=Object(u.b)()((function(e){var t=e.dispatch;return setInterval((function(){t({type:v})}),1e3),r.a.createElement("div",{style:{display:"inline-block",width:"600px"}},r.a.createElement("h1",{className:"title"},"MINESWEEPHER"),r.a.createElement(c,null),r.a.createElement("br",null),r.a.createElement(y,{className:"board"}),r.a.createElement(b,null),'Directions: Alt+Click a square to mark it with a flag. Right click it to uncover it. Don\'t uncover a mine! If the square has a number, this number represents the number of mines adjacent to that square. Hit "Avalanche!" to mix up the tiles on the board. V handy if you get stuck.')})),k=a(5),B=function(e){for(var t=[],a=0;a<e;a++){for(var n=[],r=0;r<e;r++)n.push({hasBeenClicked:!1,value:0,flagged:!1});t.push(n)}return t},M=function(e,t){for(var a=0;a<t;a++){var n=Math.floor(Math.random()*e.length),r=Math.floor(Math.random()*e[0].length);"M"===e[n][r].value?a--:e[n][r].value="M"}return e},S=function(e){for(var t=0;t<e.length;t++)for(var a=0;a<e[0].length;a++)if("M"!==e[t][a].value){var n=0;t-1>=0&&"M"===e[t-1][a].value&&n++,t+1<e.length&&"M"===e[t+1][a].value&&n++,a-1>=0&&"M"===e[t][a-1].value&&n++,a+1<e[0].length&&"M"===e[t][a+1].value&&n++,t-1>=0&&a-1>=0&&"M"===e[t-1][a-1].value&&n++,t-1>=0&&a+1<e[0].length&&"M"===e[t-1][a+1].value&&n++,t+1<e.length&&a-1>=0&&"M"===e[t+1][a-1].value&&n++,t+1<e.length&&a+1<e[0].length&&"M"===e[t+1][a+1].value&&n++,e[t][a].value=n}return e},N={victoryStatus:!1,failureStatus:!1,flagsApplied:0,timer:0,timerLimit:999};function O(e,t,a){var n=B(e),r=Math.floor(Math.pow(e,2)/t);return n=M(n,r),n=S(n),Object.assign({},N,{board:n,totalMines:r,requestedBoardSize:e,requestedBoardDifficulty:t,timerLimit:a})}var A=function(e){if(!e.failureStatus&&e.flagsApplied===e.totalMines){for(var t=0;t<e.board.length;t++)for(var a=0;a<e.board[0].length;a++){var n=e.board[t][a];if("M"===n.value&&!1===n.flagged)return!1;if(n.value>=0&&!1===n.hasBeenClicked)return!1}return!0}return!1},I=function(e){for(var t=e.board,a=[],n=[],r=0;r<t.length;r++)for(var l=0;l<t[0].length;l++)"M"!==t[r][l].value||t[r][l].flagged||(a.push([r,l]),t[r][l].value="?"),"number"!==typeof t[r][l].value||t[r][l].hasBeenClicked||(n.push([r,l]),t[r][l].value="?");for(var i=a.length,u=a.concat(n);i>0;){var c=Math.floor(Math.random()*u.length),s=u[c][0],o=u[c][1];"M"!==t[s][o].value&&(t[s][o].value="M",i--)}return t=S(t),Object.assign({},e,{board:t})},L=O(10,5);var j=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:L,t=arguments.length>1?arguments[1]:void 0,a=t.location;switch(t.type){case s:if("M"===e.board[a[0]][a[1]].value){var n=JSON.parse(JSON.stringify(e));return n.failureStatus=!0,n.board[a[0]][a[1]].hasBeenClicked=!0,n}var r=JSON.parse(JSON.stringify(e.board));r[a[0]][a[1]].hasBeenClicked=!0,0===r[a[0]][a[1]].value&&(r=function e(t,a){var n=a[0],r=a[1];return n-1>=0&&(0!==t[n-1][r].value||t[n-1][r].hasBeenClicked?t[n-1][r].hasBeenClicked=!0:(t[n-1][r].hasBeenClicked=!0,t=e(t,[n-1,r]))),n+1<t.length&&(0!==t[n+1][r].value||t[n+1][r].hasBeenClicked?t[n+1][r].hasBeenClicked=!0:(t[n+1][r].hasBeenClicked=!0,t=e(t,[n+1,r]))),r+1<t.length&&(0!==t[n][r+1].value||t[n][r+1].hasBeenClicked?t[n][r+1].hasBeenClicked=!0:(t=e(t,[n,r+1]))[n][r+1].hasBeenClicked=!0),r-1>=0&&(0!==t[n][r-1].value||t[n][r-1].hasBeenClicked?t[n][r-1].hasBeenClicked=!0:(t[n][r-1].hasBeenClicked=!0,t=e(t,[n,r-1]))),n-1>=0&&r-1>=0&&(0!==t[n-1][r-1].value||t[n-1][r-1].hasBeenClicked?t[n-1][r-1].hasBeenClicked=!0:(t[n-1][r-1].hasBeenClicked=!0,t=e(t,[n-1,r-1]))),n-1>=0&&r+1<t[0].length&&(0!==t[n-1][r+1].value||t[n-1][r+1].hasBeenClicked?t[n-1][r+1].hasBeenClicked=!0:(t[n-1][r+1].hasBeenClicked=!0,t=e(t,[n-1,r+1]))),n+1<t.length&&r+1<t[0].length&&(0!==t[n+1][r+1].value||t[n+1][r+1].hasBeenClicked?t[n+1][r+1].hasBeenClicked=!0:(t[n+1][r+1].hasBeenClicked=!0,t=e(t,[n+1,r+1]))),n+1<t.length&&r-1>=0&&(0!==t[n+1][r-1].value||t[n+1][r-1].hasBeenClicked?t[n+1][r-1].hasBeenClicked=!0:(t[n+1][r-1].hasBeenClicked=!0,t=e(t,[n+1,r-1]))),t}(r,a));var l=Object.assign({},e,{board:r});return A(l)&&(l.victoryStatus=!0),l;case o:var i=JSON.parse(JSON.stringify(e));return i.board[a[0]][a[1]].flagged=!i.board[a[0]][a[1]].flagged,i.board[a[0]][a[1]].flagged?i.flagsApplied++:i.flagsApplied--,A(i)&&(i.victoryStatus=!0),i;case d:Object.assign({},e);return O(t.boardParams,e.requestedBoardDifficulty);case m:return Object.assign({},e,{requestedBoardSize:t.size});case f:return Object.assign({},e,{requestedBoardDifficulty:t.difficulty});case v:return console.log("increment timer"),e.timer+1>e.timerLimit?(console.log("failure"),Object.assign({},e,{failureStatus:!0})):Object.assign({},e,e.timer++);case h:return Object.assign({},e,e.timerLimit=t.timerLimit);case g:var u=JSON.parse(JSON.stringify(e));return I(u);default:return e}},D=Object(k.b)(j);i.a.render(r.a.createElement(u.a,{store:D},r.a.createElement(C,null)),document.getElementById("root"))}},[[11,1,2]]]);
//# sourceMappingURL=main.0ef9038a.chunk.js.map